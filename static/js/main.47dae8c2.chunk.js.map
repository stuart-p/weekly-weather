{"version":3,"sources":["images/thunderStatic.svg","images/thunder.svg","images/snowStatic.svg","images/snowy.svg","images/mistStatic.svg","images/misty.svg","images/cloudStatic.svg","images/cloudy.svg","images/rainStatic.svg","images/sunStatic.svg","images/rainy.svg","images/sunny.svg","logo.svg","selectedDetails.js","dayPreview.jsx","forecastGrid.js","weather.model.js","pictorialView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LocationDisplay","props","className","DateAndTimeDisplay","day","date","time","DayPreview","state","weatherForDay","selectedDay","whatWeather","weatherPreviews","200","mod","icon","thunder","201","202","230","231","232","233","300","cloudyDay","301","302","500","rainyDay","501","502","511","520","521","522","600","snowy","610","611","612","621","622","623","700","misty","711","721","731","741","751","800","sunny","801","802","803","804","900","previewData","weather","forecastButtonClass","classNames","forecastGrid__itemBG","this","onClick","switchSelectedDay","temperature","src","React","Component","DayGrid","Object","keys","weatherData","map","iteratee","key","fetchWeatherData","axios","get","then","response","data","forEach","forecast","push","temp","code","WeatherImage","weatherImages","displayedImage","graphicToDisplay","weatherBackground","circleBorder","App","location","day0","day1","day2","day3","day4","day5","day6","currentTime","displayedWeatherGraphic","displayedDay","getCurrentTime","today","Date","getHours","getMinutes","getCurrentDay","getDay","getCurrentDate","getDate","getMonth","getArrayOfNextSevenDays","days","dayArray","i","setDate","getArrayOfDates","dateArray","thisDate","getWeatherData","setWeatherDataRegularly","Promise","resolve","reject","setState","currentState","weatherUpdate","setTimeout","imageForDay","id","dayData","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.47dae8c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thunderStatic.d30350d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunder.7142c78b.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowStatic.73bb813c.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy.67d63a14.svg\";","module.exports = __webpack_public_path__ + \"static/media/mistStatic.9f4d5762.svg\";","module.exports = __webpack_public_path__ + \"static/media/misty.ad789581.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudStatic.0af35e78.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.80a5d865.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainStatic.46aee3f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunStatic.539254f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy.d235ab65.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunny.7f93fbdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport \"./index.css\";\n\nexport function LocationDisplay(props) {\n  return (\n    <div className=\"selectedDetails__location\">\n      <h2>Manchester</h2>\n    </div>\n  );\n}\n\nexport function DateAndTimeDisplay(props) {\n  return (\n    <div className=\"selectedDetails__dateTime\">\n      <h3>\n        {props.day}, {props.date}\n      </h3>\n      <h3> {props.time}</h3>\n    </div>\n  );\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport cloudyDay from \"./images/cloudStatic.svg\";\nimport rainyDay from \"./images/rainStatic.svg\";\nimport misty from \"./images/mistStatic.svg\";\nimport thunder from \"./images/thunderStatic.svg\";\nimport snowy from \"./images/snowStatic.svg\";\nimport sunny from \"./images/sunStatic.svg\";\nexport class DayPreview extends React.Component {\n  state = {\n    weatherForDay: 900,\n    selectedDay: false\n  };\n\n  whatWeather = () => {\n    const weatherPreviews = {\n      200: { mod: \"forecastGrid__itemBG--stormy\", icon: thunder },\n      201: { mod: \"forecastGrid__itemBG--stormy\", icon: thunder },\n      202: { mod: \"forecastGrid__itemBG--stormy\", icon: thunder },\n      230: { mod: \"forecastGrid__itemBG--stormy\", icon: thunder },\n      231: { mod: \"forecastGrid__itemBG--stormy\", icon: thunder },\n      232: { mod: \"forecastGrid__itemBG--stormy\", icon: thunder },\n      233: { mod: \"forecastGrid__itemBG--stormy\", icon: thunder },\n      300: { mod: \"forecastGrid__itemBG--cloudy\", icon: cloudyDay },\n      301: { mod: \"forecastGrid__itemBG--cloudy\", icon: cloudyDay },\n      302: { mod: \"forecastGrid__itemBG--stormy\", icon: thunder },\n      500: { mod: \"forecastGrid__itemBG--cloudy\", icon: rainyDay },\n      501: { mod: \"forecastGrid__itemBG--cloudy\", icon: rainyDay },\n      502: { mod: \"forecastGrid__itemBG--stormy\", icon: thunder },\n      511: { mod: \"forecastGrid__itemBG--stormy\", icon: thunder },\n      520: { mod: \"forecastGrid__itemBG--cloudy\", icon: rainyDay },\n      521: { mod: \"forecastGrid__itemBG--cloudy\", icon: rainyDay },\n      522: { mod: \"forecastGrid__itemBG--stormy\", icon: thunder },\n      600: { mod: \"forecastGrid__itemBG--snow\", icon: snowy },\n      610: { mod: \"forecastGrid__itemBG--snow\", icon: snowy },\n      611: { mod: \"forecastGrid__itemBG--snow\", icon: snowy },\n      612: { mod: \"forecastGrid__itemBG--snow\", icon: snowy },\n      621: { mod: \"forecastGrid__itemBG--snow\", icon: snowy },\n      622: { mod: \"forecastGrid__itemBG--snow\", icon: snowy },\n      623: { mod: \"forecastGrid__itemBG--snow\", icon: snowy },\n      700: { mod: \"forecastGrid__itemBG--misty\", icon: misty },\n      711: { mod: \"forecastGrid__itemBG--misty\", icon: misty },\n      721: { mod: \"forecastGrid__itemBG--misty\", icon: misty },\n      731: { mod: \"forecastGrid__itemBG--misty\", icon: misty },\n      741: { mod: \"forecastGrid__itemBG--misty\", icon: misty },\n      751: { mod: \"forecastGrid__itemBG--misty\", icon: misty },\n      800: { mod: \"forecastGrid__itemBG--sunny\", icon: sunny },\n      801: { mod: \"forecastGrid__itemBG--sunny\", icon: sunny },\n      802: { mod: \"forecastGrid__itemBG--sunny\", icon: sunny },\n      803: { mod: \"forecastGrid__itemBG--sunny\", icon: sunny },\n      804: { mod: \"forecastGrid__itemBG--cloudy\", icon: cloudyDay },\n      900: { mod: \"forecastGrid__itemBG--cloudy\", icon: cloudyDay }\n    };\n    const type =\n      weatherPreviews[this.props.previewData.weather].mod ||\n      \"forecastGrid__itemBG--cloudy\";\n    return {\n      mod:\n        weatherPreviews[this.props.previewData.weather].mod ||\n        \"forecastGrid__itemBG--cloudy\",\n      icon: weatherPreviews[this.props.previewData.weather].icon || cloudyDay\n    };\n  };\n\n  render() {\n    const forecastButtonClass = classNames({\n      forecastGrid__itemBG: true,\n      [this.whatWeather().mod]: true,\n      selectedPreviewDay: this.props.selectedDay\n    });\n    return (\n      <li onClick={this.props.switchSelectedDay}>\n        <div className={forecastButtonClass}>\n          <p>{this.props.previewData.day}</p>\n          <p>{this.props.previewData.temperature}</p>\n          <img src={this.whatWeather().icon} />\n        </div>\n      </li>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./index.css\";\nimport classNames from \"classnames\";\nimport { DayPreview } from \"./dayPreview\";\n\nexport class DayGrid extends React.Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"forecastGrid__list\">\n        <ul>\n          {Object.keys(this.props.weatherData).map((day, iteratee) => {\n            return (\n              <DayPreview\n                key={iteratee}\n                previewData={this.props.weatherData[day]}\n                switchSelectedDay={() => {\n                  this.props.switchSelectedDay(iteratee);\n                }}\n                selectedDay={this.props.selectedDay === iteratee}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\n\nexport function fetchWeatherData() {\n  return axios\n    .get(\n      \"https://api.weatherbit.io/v2.0/forecast/daily?city_id=2643123&days=7&key=96730161f26d45cdaa8373998e19468d\"\n    )\n    .then(response => {\n      const weatherData = [];\n      Object.keys(response.data.data).forEach(forecast => {\n        weatherData.push({\n          temperature: response.data.data[forecast].temp,\n          weather: response.data.data[forecast].weather.code\n        });\n      });\n      return weatherData;\n    });\n}\n","import cloudyDay from \"./images/cloudy.svg\";\nimport rainyDay from \"./images/rainy.svg\";\nimport misty from \"./images/misty.svg\";\nimport thunder from \"./images/thunder.svg\";\nimport snowy from \"./images/snowy.svg\";\nimport sunny from \"./images/sunny.svg\";\nimport React from \"react\";\nimport classNames from \"classnames\";\n\nexport function WeatherImage(props) {\n  const weatherImages = {\n    200: { icon: thunder, mod: \"circleBorder--stormy\" },\n    201: { icon: thunder, mod: \"circleBorder--stormy\" },\n    202: { icon: thunder, mod: \"circleBorder--stormy\" },\n    230: { icon: thunder, mod: \"circleBorder--stormy\" },\n    231: { icon: thunder, mod: \"circleBorder--stormy\" },\n    232: { icon: thunder, mod: \"circleBorder--stormy\" },\n    233: { icon: thunder, mod: \"circleBorder--stormy\" },\n    300: { icon: cloudyDay, mod: \"circleBorder--cloudy\" },\n    301: { icon: cloudyDay, mod: \"circleBorder--cloudy\" },\n    302: { icon: thunder, mod: \"circleBorder--stormy\" },\n    500: { icon: rainyDay, mod: \"circleBorder--cloudy\" },\n    501: { icon: rainyDay, mod: \"circleBorder--cloudy\" },\n    502: { icon: thunder, mod: \"circleBorder--stormy\" },\n    511: { icon: thunder, mod: \"circleBorder--stormy\" },\n    520: { icon: rainyDay, mod: \"circleBorder--cloudy\" },\n    521: { icon: rainyDay, mod: \"circleBorder--cloudy\" },\n    522: { icon: thunder, mod: \"circleBorder--stormy\" },\n    600: { icon: snowy, mod: \"circleBorder--snow\" },\n    610: { icon: snowy, mod: \"circleBorder--snow\" },\n    611: { icon: snowy, mod: \"circleBorder--snow\" },\n    612: { icon: snowy, mod: \"circleBorder--snow\" },\n    621: { icon: snowy, mod: \"circleBorder--snow\" },\n    622: { icon: snowy, mod: \"circleBorder--snow\" },\n    623: { icon: snowy, mod: \"circleBorder--snow\" },\n    700: { icon: misty, mod: \"circleBorder--misty\" },\n    711: { icon: misty, mod: \"circleBorder--misty\" },\n    721: { icon: misty, mod: \"circleBorder--misty\" },\n    731: { icon: misty, mod: \"circleBorder--misty\" },\n    741: { icon: misty, mod: \"circleBorder--misty\" },\n    751: { icon: misty, mod: \"circleBorder--misty\" },\n    800: { icon: sunny, mod: \"circleBorder--sunny\" },\n    801: { icon: sunny, mod: \"circleBorder--sunny\" },\n    802: { icon: sunny, mod: \"circleBorder--sunny\" },\n    803: { icon: sunny, mod: \"circleBorder--sunny\" },\n    804: { icon: cloudyDay, mod: \"circleBorder--cloudy\" },\n    900: { icon: cloudyDay, mod: \"circleBorder--cloudy\" }\n  };\n  const displayedImage =\n    weatherImages[props.graphicToDisplay].icon || cloudyDay;\n  const weatherBackground = classNames({\n    circleBorder: true,\n    [weatherImages[props.graphicToDisplay].mod]: true\n  });\n  return (\n    <div className={weatherBackground}>\n      <img src={displayedImage} className=\"weatherImage--display\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { LocationDisplay, DateAndTimeDisplay } from \"./selectedDetails\";\nimport { DayGrid } from \"./forecastGrid\";\nimport { fetchWeatherData } from \"./weather.model\";\nimport { WeatherImage } from \"./pictorialView\";\n\nclass App extends React.Component {\n  state = {\n    location: \"Manchester\",\n    weatherForDay: {\n      day0: {\n        day: \"Saturday\",\n        date: \"15/02/20\",\n        temperature: \"8 degrees\",\n        weather: 900\n      },\n      day1: {\n        day: \"Saturday\",\n        date: \"15/02/20\",\n        temperature: \"8 degrees\",\n        weather: 900\n      },\n      day2: {\n        day: \"Saturday\",\n        date: \"15/02/20\",\n        temperature: \"8 degrees\",\n        weather: 900\n      },\n      day3: {\n        day: \"Saturday\",\n        date: \"15/02/20\",\n        temperature: \"8 degrees\",\n        weather: 900\n      },\n      day4: {\n        day: \"Saturday\",\n        date: \"15/02/20\",\n        temperature: \"8 degrees\",\n        weather: 900\n      },\n      day5: {\n        day: \"Saturday\",\n        date: \"15/02/20\",\n        temperature: \"8 degrees\",\n        weather: 900\n      },\n      day6: {\n        day: \"Saturday\",\n        date: \"15/02/20\",\n        temperature: \"8 degrees\",\n        weather: 900\n      }\n    },\n    currentTime: \"18:09\",\n    displayedWeatherGraphic: 800,\n    displayedDay: 0\n  };\n\n  getCurrentTime = () => {\n    const today = new Date();\n    return `${(today.getHours() < 10 ? \"0\" : \"\") +\n      today.getHours()}:${(today.getMinutes() < 10 ? \"0\" : \"\") +\n      today.getMinutes()}`;\n  };\n  getCurrentDay = () => {\n    const today = new Date();\n    const days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ];\n    return days[today.getDay()];\n  };\n  getCurrentDate = () => {\n    const today = new Date();\n    let date = today.getDate();\n    if (date > 3 && date < 21) {\n      date += \"th\";\n    } else {\n      switch (date % 10) {\n        case 1:\n          date += \"st\";\n          break;\n        case 2:\n          date += \"nd\";\n          break;\n        case 3:\n          date += \"rd\";\n          break;\n        default:\n          date += \"th\";\n      }\n    }\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n\n    return `${date} ${months[today.getMonth()]}`;\n  };\n  getArrayOfNextSevenDays = () => {\n    const days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ];\n    const today = new Date();\n    const dayArray = [];\n    for (let i = 0; i < 7; i++) {\n      dayArray.push(days[today.getDay()]);\n      today.setDate(today.getDate() + 1);\n    }\n    return dayArray;\n  };\n\n  getArrayOfDates = () => {\n    const today = new Date();\n    const dateArray = [];\n    for (let i = 0; i < 7; i++) {\n      let thisDate = today.getDate();\n      if (thisDate > 3 && thisDate < 21) {\n        thisDate += \"th\";\n      } else {\n        switch (thisDate % 10) {\n          case 1:\n            thisDate += \"st\";\n            break;\n          case 2:\n            thisDate += \"nd\";\n            break;\n          case 3:\n            thisDate += \"rd\";\n            break;\n          default:\n            thisDate += \"th\";\n        }\n      }\n      const months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n      ];\n\n      dateArray.push(`${thisDate} ${months[today.getMonth()]}`);\n\n      today.setDate(today.getDate() + 1);\n    }\n    return dateArray;\n  };\n\n  getWeatherData = () => {\n    // console.log(fetchWeatherData);\n    return fetchWeatherData();\n  };\n  setWeatherDataRegularly = () => {\n    const currentTime = this.getCurrentTime();\n    const dayArray = this.getArrayOfNextSevenDays();\n    const dateArray = this.getArrayOfDates();\n    return this.getWeatherData()\n      .then(weatherData => {\n        return new Promise((resolve, reject) => {\n          this.setState(currentState => {\n            const weatherUpdate = {\n              ...currentState.weatherForDay\n            };\n            Object.keys(weatherUpdate).forEach((day, iteratee) => {\n              weatherUpdate[day].day = dayArray[iteratee];\n              weatherUpdate[day].date = dateArray[iteratee];\n              weatherUpdate[\n                day\n              ].temperature = `${weatherData[iteratee].temperature}\\u00B0C`;\n              weatherUpdate[day].weather = weatherData[iteratee].weather;\n            });\n            return {\n              currentTime,\n              weatherForDay: weatherUpdate,\n              displayedWeatherGraphic:\n                weatherUpdate[`day${currentState.displayedDay}`].weather\n            };\n          }, resolve);\n        });\n      })\n      .then(() => {\n        return new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n          }, 60000);\n        });\n      })\n      .then(() => {\n        this.setWeatherDataRegularly();\n      });\n  };\n\n  switchSelectedDay = day => {\n    this.setState(currentState => {\n      const imageForDay = currentState.weatherForDay[`day${day}`].weather;\n      return {\n        displayedDay: day,\n        displayedWeatherGraphic: imageForDay\n      };\n    });\n  };\n\n  componentDidMount() {\n    this.setWeatherDataRegularly();\n  }\n\n  render() {\n    return (\n      <main>\n        <header id=\"topBanner\">\n          <h1>Weekly Weather Watch</h1>\n        </header>\n        <section id=\"selectedDetails\">\n          <LocationDisplay />\n          <DateAndTimeDisplay\n            day={this.state.weatherForDay.day0.day}\n            date={this.state.weatherForDay.day0.date}\n            time={this.state.currentTime}\n          />\n        </section>\n        <aside id=\"forecastGrid\">\n          <DayGrid\n            dayData={this.getArrayOfNextSevenDays()}\n            weatherData={{ ...this.state.weatherForDay }}\n            switchSelectedDay={this.switchSelectedDay}\n            selectedDay={this.state.displayedDay}\n          />\n        </aside>\n        <section id=\"pictorialView\">\n          <WeatherImage graphicToDisplay={this.state.displayedWeatherGraphic} />\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}